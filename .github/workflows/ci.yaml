name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build_test_push:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        volumes:
          - postgres_data:/var/lib/postgresql/data
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build production Docker image
        run: docker build --target production -t ghcr.io/${{ github.repository }}/calendar-api:latest .
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_PORT: ${{ secrets.API_PORT }}

      # - name: Wait for database to be ready
      #   run: |
      #     until docker exec db psql "${{ secrets.DATABASE_URL }}" -c 'SELECT 1;' > /dev/null 2>&1; do
      #       echo "Waiting for database to be ready..."
      #       sleep 1
      #     done

      - name: Run tests (production image)
        run: |
          docker run --rm \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e API_PORT=${{ secrets.API_PORT }} \
            ghcr.io/${{ github.repository }}/calendar-api:latest \
            yarn test:prod

      - name: Docker login to GHCR
        if: success()
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Push Docker image to GHCR
        if: success()
        run: docker push ghcr.io/${{ github.repository }}/calendar-api:latest